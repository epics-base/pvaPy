package:
  name: pvapy
  version: {{ environ.get('PVAPY_VERSION', '0.0') }}

source:
  git_rev: {{ environ.get('PVAPY_VERSION', '0.0') }}
  git_url: https://github.com/epics-base/pvaPy
  #path: ../../..

build:
  number: {{ environ.get('BUILD_NUMBER', '1') }}
  script_env:
    - BUILD_FLAGS
    - PVAPY_USE_CPP11
    - PVAPY_VERSION
  entry_points:
    - pvapy-ad-sim-server=pvapy.cli.adSimServer:main
    - pvapy-hpc-consumer=pvapy.cli.hpcConsumer:main
    - pvapy-hpc-collector=pvapy.cli.hpcCollector:main
    - pvapy-mirror-server=pvapy.cli.mirrorServer:main

test:
  requires:
    - pylint
    - pytest
    #
    # The following modules are used for several pvapy test classes, and
    # are not required for conda build tests
    #
    #- h5py
    #- hdf5plugin
    #- pycryptodome
    #- pillow
    #- rsa

  source_files:
    - test

requirements:
  build:
    - python
    - sphinx
    - sphinx_rtd_theme
    #
    # Supported NumPy versions differ for different python versions
    #
    - numpy=1.26              # python >= 3.12
    #- numpy=1.22             # python >= 3.8, < 3.12
    #- numpy=1.19             # python < 3.8
    - epics-base={{ environ.get('EPICS_BASE_VERSION', '0.0') }}
    - pvapy-boost={{ environ.get('BOOST_VERSION', '0.0') }}
    #
    # The following modules are required for some image processing 
    # examples and data processor classes
    #
    #- h5py
    #- hdf5plugin
    #- pillow
    #- pycryptodome
    #- rsa
    #
    # The following modules are required for compressed images
    #
    #- python-blosc
    #- lz4
    #- bitshuffle

  run:
    - python
    #
    # Supported NumPy versions differ for different python versions
    #
    - numpy>=1.26,<2.0        # python >= 3.12
    #- numpy>=1.22,<2.0       # python >= 3.8, < 3.12
    #- numpy>=1.19,<1.21      # python < 3.8
    - epics-base={{ environ.get('EPICS_BASE_VERSION', '0.0') }}
    - pvapy-boost={{ environ.get('BOOST_VERSION', '0.0') }}

about:
  home: https://github.com/epics-base/pvaPy
  license: EPICS Open License
  summary: Python library for EPICS PV Access 
